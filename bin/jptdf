#!/bin/sh

# `gshuf` shuffles rows in a file
# `gshuf (shuf)` is in `coreutils` which can be downloaded by homebrew.
# `g` is prefixed to commands in coreutils. original command name is `shuf`.
# `sort -R` sounds too slow. see http://stackoverflow.com/questions/886237/how-can-i-randomize-the-lines-in-a-file-using-standard-tools-on-red-hat-linux

readonly datasource=$HOME/bin/datasource/jptdf.min.dat

while getopts :n:z OPT
do
    case ${OPT} in
        "n" )
            n=${OPTARG}
            ;;
        "z" )
            z=1
            ;;
        * )
            echo "Usage: $(basename ${0}) [-n NUMBER] [-z]" 1>&2
            exit 1
            ;;
    esac
done

gshuf -n ${n:=10} ${datasource} | while read cdiffpt pdiffpt drawpt hand
do
    rnd=`gshuf -i 0-1 -n 1`
    # child
    if [ ${rnd} -eq 0 ]; then
        read -s -r -p "${cdiffpt}. " input < /dev/tty
        if [ -z ${input} ]; then
            echo "->${drawpt}(${hand})"
            continue
        fi
        if [ ${z} ]; then
            if [ ${input} != ${hand} ]; then
                echo "->${hand}"
            fi
        else
            if [ ${input} != ${drawpt} ]; then
                echo "->${drawpt}"
            fi
        fi
    # parent
    else
        read -s -r -p "${pdiffpt}& " input < /dev/tty
        if [ -z ${input} ]; then
            echo "->${drawpt}(${hand})"
            continue
        fi
        if [ ${z} ]; then
            if [ ${input} != ${hand} ]; then
                echo "->${hand}"
            fi
        else
            if [ ${input} != ${drawpt} ]; then
                echo "->${drawpt}"
            fi
        fi
    fi
done
